var Solution = require("./solution");         // 引入解答類別
var R = require("j6")
// 問題：若有一個很平，sd 很大，那麼另一個移動或伸展可能暫時都沒什麼用，這時難道就應該結束了？

// rnorm(10,5,2)= [7.21, 6.52, 5.15, 7.01, 8.80, 2.20, 6.01, 5.98, 4.36, 5.86]
// rnorm(10,0,1)= [-0.45, -0.77, -0.47, -1.49, 0.72, 0.82, 0.84, -0.32, -0.82, 0.49]

// rnorm(20,5,2)= [7.92, 5.87, 4.28, 4.54, 5.42, 5.01, 7.51, 2.43, 4.38, 6.74, 5.88, 4.03, 4.29, 6.94, 5.46, 0.91, 6.49, 5.18, 3.72, 6.25]
// rnorm(20,0,1)= [1.15, -1.18, 0.27, -1.38, 0.29, -0.73, -1.62, -0.53, 1.25, -0.49, 0.96, 0.32, -0.90, -0.14, 0.21, -0.35, -0.91, -0.47, 1.37, -0.39]
var d1 = [7.92, 5.87, 4.28, 4.54, 5.42, 5.01, 7.51, 2.43, 4.38, 6.74, 5.88, 4.03, 4.29, 6.94, 5.46, 0.91, 6.49, 5.18, 3.72, 6.25]
var d2 = [1.15, -1.18, 0.27, -1.38, 0.29, -0.73, -1.62, -0.53, 1.25, -0.49, 0.96, 0.32, -0.90, -0.14, 0.21, -0.35, -0.91, -0.47, 1.37, -0.39]
/*
rnorm(20,5,2)= [8.54, 2.11, 4.04, 1.40, 6.60, 5.77, 3.01, 3.13, 0.81, 2.60, 4.99, 4.74, 5.04, 4.07, 10.23, 3.38, 6.86, 3.38, 9.13, 3.03, 4.42, 4.65, 10.15, 2.30,
  1.60, 5.87, 6.96, 4.84, 11.02, 6.34, 6.61, 4.28, 6.58, 6.41, 4.85, 6.89, 0.05, 4.77, 4.49, 5.84, 0.91, 6.35, 3.48, 4.98, 5.35, 5.13, 6.60, 3.74, 3.58, 7.47, 3.40, 4.96, 2.58, 3.96, 6.05, 3.71, 4.63, 7.50, 7.34, 6.46, 4.00, 6.24, 5.24, 5.81, 4.65, 6.16, 0.94, 4.91, 2.40, 4.44, 2.52, 7.22, 5.77, 5.87, 2.74, 3.53, 11.70, 6.00, 3.32, 5.34, 2.68, 8.00, 4.38, 5.48, 8.44, 6.96, 10.64, 4.67, 4.85, 4.49, 4.02,
  6.17, 5.49, 4.89, 3.87, 4.62, 4.43, 2.86, 5.80, 7.05]
  rnorm(20,0,1)= [-0.31, 0.11, 0.95, -0.90, 0.50, -1.20, 0.45, 0.16, 0.11, -0.20, 0.44, 0.10, -0.31, 1.01, 0.92, -1.04, 1.25, 0.69, -0.55, 0.63, 0.67, -0.11, 0.54,
  -0.21, -1.06, -0.58, -0.34, -0.12, 0.00, 1.39, -1.44, 0.56, 0.41, -0.44, 0.27, -0.08, 0.41, 0.40, 2.18, 1.31, -0.69, 1.09, -1.76, -1.42, 0.12, 0.24, 0.39, -1.38,
  -0.06, -0.64, -0.19, 1.25, -0.36, -0.14, 1.14, -0.32, -0.38, -0.56, 0.32, 0.40, -0.21, 0.37, 1.64, 0.24, 1.00, 0.94, -0.31, 0.70, -0.14, 0.28, 1.55, -1.29, -0.54, -1.08, 0.05, -0.01, -0.62, 1.56, 0.53, -0.22, -1.04, -2.06, -0.48, -1.57, 0.32,
  1.03, 0.74, 0.76, 0.65, -0.10, -0.66, -0.91, -0.23, 0.78, 0.01, -0.89, -0.08, 0.08, 1.24, 0.49]
*/
var d1 = [8.54, 2.11, 4.04, 1.40, 6.60, 5.77, 3.01, 3.13, 0.81, 2.60, 4.99, 4.74, 5.04, 4.07, 10.23, 3.38, 6.86, 3.38, 9.13, 3.03, 4.42, 4.65, 10.15, 2.30,
  1.60, 5.87, 6.96, 4.84, 11.02, 6.34, 6.61, 4.28, 6.58, 6.41, 4.85, 6.89, 0.05, 4.77, 4.49, 5.84, 0.91, 6.35, 3.48, 4.98, 5.35, 5.13, 6.60, 3.74, 3.58, 7.47, 3.40, 4.96, 2.58, 3.96, 6.05, 3.71, 4.63, 7.50, 7.34, 6.46, 4.00, 6.24, 5.24, 5.81, 4.65, 6.16, 0.94, 4.91, 2.40, 4.44, 2.52, 7.22, 5.77, 5.87, 2.74, 3.53, 11.70, 6.00, 3.32, 5.34, 2.68, 8.00, 4.38, 5.48, 8.44, 6.96, 10.64, 4.67, 4.85, 4.49, 4.02,
  6.17, 5.49, 4.89, 3.87, 4.62, 4.43, 2.86, 5.80, 7.05]
var d2 = [-0.31, 0.11, 0.95, -0.90, 0.50, -1.20, 0.45, 0.16, 0.11, -0.20, 0.44, 0.10, -0.31, 1.01, 0.92, -1.04, 1.25, 0.69, -0.55, 0.63, 0.67, -0.11, 0.54,
  -0.21, -1.06, -0.58, -0.34, -0.12, 0.00, 1.39, -1.44, 0.56, 0.41, -0.44, 0.27, -0.08, 0.41, 0.40, 2.18, 1.31, -0.69, 1.09, -1.76, -1.42, 0.12, 0.24, 0.39, -1.38,
  -0.06, -0.64, -0.19, 1.25, -0.36, -0.14, 1.14, -0.32, -0.38, -0.56, 0.32, 0.40, -0.21, 0.37, 1.64, 0.24, 1.00, 0.94, -0.31, 0.70, -0.14, 0.28, 1.55, -1.29, -0.54, -1.08, 0.05, -0.01, -0.62, 1.56, 0.53, -0.22, -1.04, -2.06, -0.48, -1.57, 0.32,
  1.03, 0.74, 0.76, 0.65, -0.10, -0.66, -0.91, -0.23, 0.78, 0.01, -0.89, -0.08, 0.08, 1.24, 0.49]

// var d1 = [7.21, 6.52, 5.15, 7.01, 8.80, 2.20, 6.01, 5.98, 4.36, 5.86]
// var d2 = [-0.45, -0.77, -0.47, -1.49, 0.72, 0.82, 0.84, -0.32, -0.82, 0.49]
var samples = d1.concat(d2)
var pmin = 0.001

function randInt(a, b) {
  return a + Math.floor(Math.random()*(b-a))
}

function P(d, s) {
  return R.dnorm(s, d.mu, d.sd)
}

function clone(src) {
  return JSON.parse(JSON.stringify(src));
}

class SolutionCluster extends Solution {
  // constructor(v) { super(v) }

  static init(len) {
    let dists = []
    for (let i=0; i<len; i++) {
      dists[i] = { mu: randInt(-5, 5), sd: randInt(1, 5) }
    }
    return dists
  }

  neighbor() {    // 單變數解答的鄰居函數。
    // let dists = this.v.slice()
    let dists = clone(this.v)
    let step = this.step * (Math.random() - 0.5)
    let di = randInt(0, dists.length)
    let attr = randInt(0, 2)
    switch (attr) {
      case 0:
        dists[di].mu += step
        break
      case 1:
        dists[di].sd += step
        break
    }
    return new SolutionCluster(dists)
  }

  energy() {      // 能量函數
    let score = 0
    let dists = this.v
    for (let s of samples) {
      let pmax = 0.000001
      for (let d of dists) {
        let p = P(d, s)
        // console.log('P(%j,%d)=%d', d, s, p)
        if (p > pmax) {
          pmax = p
        }
        score += 0.1 * Math.log(p)
      }
      let entropy = Math.log(pmax)
      score += entropy
      // console.log('pmax=%d entropy=%d', pmax, entropy)
    }
    return -1 * score
  }
  
  toString() {    // 將解答轉為字串，以供印出觀察。
    return "energy(" + JSON.stringify(this.v) + ")="+this.energy().toFixed(9);
  }
}

module.exports = SolutionCluster  // 將解答類別匯出。