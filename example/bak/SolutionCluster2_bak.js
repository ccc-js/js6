var Solution = require("./solution");         // 引入解答類別
var R = require("j6")

/*
rnorm(20,5,2)= [7.46, -1.77, 5.50, 6.75, 4.03, 5.28, 7.27, 1.78, 1.98, 4.64, 6.33, 3.56, 7.56, 2.01, 7.38, 9.98, 3.27, 6.07, 5.41, 3.14, 4.96, 2.54, 4.63, 4.37, 6.63, 6.33, 6.18, 1.44, 6.29, 2.64, 5.61, 6.73, 2.42, 6.08, 7.01, 4.16, 7.48, 1.37, 3.28, 4.91, 7.90, 2.34, 4.90, 5.16, 7.07, 4.75, 4.71, 6.29, 5.83, 5.29, 7.63, 8.25, 4.93, 4.60, 5.01, 3.99, 5.32, 3.76, 5.17, 3.49, 2.18, 6.13, 2.84, 2.95, 4.20, 4.26, 7.06, 5.61, 5.95, 5.89, 3.03, 6.05, 2.43, 4.65, 3.16, 5.25, 6.28, 5.77, 5.14, 7.00, 2.82, 4.60, 2.14, 4.40, 4.31, 5.64, 5.60, 5.04, 5.38, 2.58, 4.86, 5.13, 3.71, 3.70, 3.94, 6.34, 1.12, 6.38, 6.42, 5.91]
rnorm(20,0,1)= [-0.33, -1.49, -0.99, -0.75, 0.74, 0.55, 1.37, 1.21, 1.41, -1.01, 0.96, -0.55, -0.14, 0.07, -0.40, 1.57, 2.04, 1.15, 2.62, 0.12, -0.15, -0.20, -0.05, 0.66, 0.02, -0.62, -1.02, 0.91, 0.79, -0.31, 0.54, 0.45, -0.10, 0.02, -0.01, 0.61, 0.81, 0.33, -0.00, 0.15, -0.40, 0.68, -0.53, -0.39, 0.35, -0.68, -0.14, 1.71, -0.35, 0.53, 0.27, -0.94, -2.45, 0.08, -1.12, -0.44, 0.11, -0.86, 0.54, -0.53, 0.17, -2.50, -1.18, 1.35, 0.22, -1.51, -0.14, -0.98, -0.32, 0.31, 0.86, -0.80, 0.46, -0.27, 0.23, -1.45, -0.94, 1.14, 1.46, -0.48, -1.20, 0.38, -0.60, -1.18, -0.72, 2.53, -0.80, -1.28, -0.70, -1.27, -0.66, 0.60, 2.00, -0.04, -1.17, -0.79, 0.55, -0.17, -0.01, 0.52]
rnorm(20,-2,2)= [-1.89, -2.50, -1.67, -3.87, -3.52, -0.93, -3.16, -3.23, -1.88, -1.02, -1.14, -0.13, -3.94, -7.27, -1.23, -0.95, -2.35, -1.50, 0.07, -1.38, -0.59, -4.81, -1.08, -4.54, -4.18, 0.61, -4.82, -0.43, -2.27, -3.84, -5.76, -0.86, -1.92, -2.49, -2.78, -4.23, -2.80, -4.23, -1.08, -4.65, -1.63, 0.10, -6.56, -0.52, -1.96, -3.75, -2.94, -1.54, 0.94, -2.97, -2.40, -3.02, -4.14, -1.46, -1.15, -3.39, -5.70, 2.41, -3.65, -2.69, -3.01, -4.09, 0.32, -2.88, 1.88, -2.82, -3.79, -0.99, -4.63, -3.93, -0.56, -0.54, -0.14, -0.43, -3.98, 0.67, -0.78, -0.18, -2.91, 0.17, -2.63, -4.93, -0.31, -0.73, -0.63, -1.19, -1.82, -1.29, -5.62, -5.71, -2.38, -2.51, -3.90, -4.33, -0.12, 2.02, -3.24, -1.35, 0.48, -3.92]
rnorm(20,3,1)= [2.36, 3.76, 2.95, 2.36, 4.27, 3.14, 5.04, 4.57, 2.05, 2.58, 2.87, 4.34, 2.22, 1.03, 3.85, 1.12, 0.90, 3.82, 2.33, 2.94, 4.28, 3.51, 1.81, 3.29, 4.56, 1.53, 4.84, 5.33, 3.27, 2.26, 3.00, 3.82, 3.39, 1.85, 2.50, 3.19, 3.99, 3.38, 4.89, 1.91, 2.31, 1.65, 4.84, 3.02, 2.61, 4.61, 3.34, 3.12, 3.56, 2.60, 2.49, 1.74, 1.95, 0.53, 2.60, 2.29, 0.33, 4.61, 1.10, 1.74, 2.96, 2.94, 3.37, 3.23, 4.23, 1.77, 2.99, 5.30, 2.97, 2.43, 4.60, 1.64, 2.57, 2.97, 2.77, 1.35, 1.98, 4.07, 3.01, 3.28, 4.05, 3.07, 5.04, 3.36, 2.51, 3.84, 4.95, 3.36, 2.02, 1.69, 3.33, 2.25, 4.09, 2.37, 2.97, 4.60, 2.68, 3.25, 4.01, 2.28]
*/

var d1x = [7.46, -1.77, 5.50, 6.75, 4.03, 5.28, 7.27, 1.78, 1.98, 4.64, 6.33, 3.56, 7.56, 2.01, 7.38, 9.98, 3.27, 6.07, 5.41, 3.14, 4.96, 2.54, 4.63, 4.37, 6.63, 6.33, 6.18, 1.44, 6.29, 2.64, 5.61, 6.73, 2.42, 6.08, 7.01, 4.16, 7.48, 1.37, 3.28, 4.91, 7.90, 2.34, 4.90, 5.16, 7.07, 4.75, 4.71, 6.29, 5.83, 5.29, 7.63, 8.25, 4.93, 4.60, 5.01, 3.99, 5.32, 3.76, 5.17, 3.49, 2.18, 6.13, 2.84, 2.95, 4.20, 4.26, 7.06, 5.61, 5.95, 5.89, 3.03, 6.05, 2.43, 4.65, 3.16, 5.25, 6.28, 5.77, 5.14, 7.00, 2.82, 4.60, 2.14, 4.40, 4.31, 5.64, 5.60, 5.04, 5.38, 2.58, 4.86, 5.13, 3.71, 3.70, 3.94, 6.34, 1.12, 6.38, 6.42, 5.91]
var d1y = [-0.33, -1.49, -0.99, -0.75, 0.74, 0.55, 1.37, 1.21, 1.41, -1.01, 0.96, -0.55, -0.14, 0.07, -0.40, 1.57, 2.04, 1.15, 2.62, 0.12, -0.15, -0.20, -0.05, 0.66, 0.02, -0.62, -1.02, 0.91, 0.79, -0.31, 0.54, 0.45, -0.10, 0.02, -0.01, 0.61, 0.81, 0.33, -0.00, 0.15, -0.40, 0.68, -0.53, -0.39, 0.35, -0.68, -0.14, 1.71, -0.35, 0.53, 0.27, -0.94, -2.45, 0.08, -1.12, -0.44, 0.11, -0.86, 0.54, -0.53, 0.17, -2.50, -1.18, 1.35, 0.22, -1.51, -0.14, -0.98, -0.32, 0.31, 0.86, -0.80, 0.46, -0.27, 0.23, -1.45, -0.94, 1.14, 1.46, -0.48, -1.20, 0.38, -0.60, -1.18, -0.72, 2.53, -0.80, -1.28, -0.70, -1.27, -0.66, 0.60, 2.00, -0.04, -1.17, -0.79, 0.55, -0.17, -0.01, 0.52]
var d2x = [-1.89, -2.50, -1.67, -3.87, -3.52, -0.93, -3.16, -3.23, -1.88, -1.02, -1.14, -0.13, -3.94, -7.27, -1.23, -0.95, -2.35, -1.50, 0.07, -1.38, -0.59, -4.81, -1.08, -4.54, -4.18, 0.61, -4.82, -0.43, -2.27, -3.84, -5.76, -0.86, -1.92, -2.49, -2.78, -4.23, -2.80, -4.23, -1.08, -4.65, -1.63, 0.10, -6.56, -0.52, -1.96, -3.75, -2.94, -1.54, 0.94, -2.97, -2.40, -3.02, -4.14, -1.46, -1.15, -3.39, -5.70, 2.41, -3.65, -2.69, -3.01, -4.09, 0.32, -2.88, 1.88, -2.82, -3.79, -0.99, -4.63, -3.93, -0.56, -0.54, -0.14, -0.43, -3.98, 0.67, -0.78, -0.18, -2.91, 0.17, -2.63, -4.93, -0.31, -0.73, -0.63, -1.19, -1.82, -1.29, -5.62, -5.71, -2.38, -2.51, -3.90, -4.33, -0.12, 2.02, -3.24, -1.35, 0.48, -3.92]
var d2y = [2.36, 3.76, 2.95, 2.36, 4.27, 3.14, 5.04, 4.57, 2.05, 2.58, 2.87, 4.34, 2.22, 1.03, 3.85, 1.12, 0.90, 3.82, 2.33, 2.94, 4.28, 3.51, 1.81, 3.29, 4.56, 1.53, 4.84, 5.33, 3.27, 2.26, 3.00, 3.82, 3.39, 1.85, 2.50, 3.19, 3.99, 3.38, 4.89, 1.91, 2.31, 1.65, 4.84, 3.02, 2.61, 4.61, 3.34, 3.12, 3.56, 2.60, 2.49, 1.74, 1.95, 0.53, 2.60, 2.29, 0.33, 4.61, 1.10, 1.74, 2.96, 2.94, 3.37, 3.23, 4.23, 1.77, 2.99, 5.30, 2.97, 2.43, 4.60, 1.64, 2.57, 2.97, 2.77, 1.35, 1.98, 4.07, 3.01, 3.28, 4.05, 3.07, 5.04, 3.36, 2.51, 3.84, 4.95, 3.36, 2.02, 1.69, 3.33, 2.25, 4.09, 2.37, 2.97, 4.60, 2.68, 3.25, 4.01, 2.28]

// var d1 = [7.21, 6.52, 5.15, 7.01, 8.80, 2.20, 6.01, 5.98, 4.36, 5.86]
// var d2 = [-0.45, -0.77, -0.47, -1.49, 0.72, 0.82, 0.84, -0.32, -0.82, 0.49]
var xSamples = d1x.concat(d2x)
var ySamples = d1y.concat(d2y)
var pmin = 0.001

function randInt(a, b) {
  return a + Math.floor(Math.random()*(b-a))
}

function P(d, s) {
  return R.dnorm(s, d.mu, d.sd)
}

function clone(src) {
  return JSON.parse(JSON.stringify(src));
}

Solution.init = function (len) {
  let dists = []
  for (let i=0; i<len; i++) {
    dists[i] = {x: { mu: randInt(-5, 5), sd: randInt(1, 5) }, y: { mu: randInt(-5, 5), sd: randInt(1, 5) } }
  }
  return dists
}

Solution.prototype.neighbor = function() {    // 單變數解答的鄰居函數。
  let dists = clone(this.v)
  let step = this.step * (Math.random() - 0.5)
  let di = randInt(0, dists.length)
  let attr = randInt(0, 2)
  let xy = randInt(0, 2)
  let d = dists[di]
  let sel = (xy===0) ? d.x : d.y
  switch (attr) {
    case 0:
      sel.mu += step
      break
    case 1:
      sel.sd += step
      break
  }
  return new Solution(dists)
}

Solution.prototype.energy = function() {      // 能量函數
  let score = 0
  let dists = this.v
  for (let i=0; i<xSamples.length; i++) {
    let s = {x: xSamples[i], y: ySamples[i]}
    let ebest = 0
    for (let d of dists) {
      let px = P(d.x, s.x)
      let py = P(d.y, s.y)
      let ex = Math.log(px)
      let ey = Math.log(py)
      // console.log('P(%j,%d)=%d', d, s, p)
      if (ex+ey < ebest) {
        ebest = ex+ey
      }
      score += 0.1 * (ex+ey)
    }
    let entropy = ebest
    score += entropy
    // console.log('pmax=%d entropy=%d', pmax, entropy)
  }
  return -1 * score
}

Solution.prototype.toString = function() {    // 將解答轉為字串，以供印出觀察。
  return "energy(" + JSON.stringify(this.v) + ")="+this.energy().toFixed(9);
}

module.exports = Solution                     // 將解答類別匯出。